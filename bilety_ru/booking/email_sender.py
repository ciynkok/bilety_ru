import smtplib
from email.mime.multipart import MIMEMultipart
from email.mime.text import MIMEText
from email.utils import formatdate
import os
from datetime import datetime
from typing import List, Dict, Optional

class FlightBookingEmailSender:
    def __init__(self):
        # –ù–∞—Å—Ç—Ä–æ–π–∫–∏ SMTP –¥–ª—è —Ä–∞–∑–Ω—ã—Ö –ø–æ—á—Ç–æ–≤—ã—Ö —Å–µ—Ä–≤–∏—Å–æ–≤
        self.smtp_settings = {
            'gmail': {
                'server': 'smtp.gmail.com',
                'port': 587
            },
            'mail_ru': {
                'server': 'smtp.mail.ru',
                'port': 587
            },
            'yandex': {
                'server': 'smtp.yandex.ru',
                'port': 587
            }
        }
    
    def _get_smtp_config(self, email: str) -> Dict:
        """–û–ø—Ä–µ–¥–µ–ª—è–µ–º SMTP —Å–µ—Ä–≤–µ—Ä –ø–æ –¥–æ–º–µ–Ω—É email"""
        if 'gmail.com' in email:
            return self.smtp_settings['gmail']
        elif 'mail.ru' in email or 'bk.ru' in email or 'inbox.ru' in email:
            return self.smtp_settings['mail_ru']
        elif 'yandex.ru' in email or 'yandex.com' in email:
            return self.smtp_settings['yandex']
        else:
            # –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é –∏—Å–ø–æ–ª—å–∑—É–µ–º Gmail
            return self.smtp_settings['gmail']
    
    def _create_booking_html_template(self, booking_data: Dict) -> str: 
        # –ì–µ–Ω–µ—Ä–∞—Ü–∏—è HTML –¥–ª—è –∫–∞–∂–¥–æ–≥–æ –ø–∞—Å—Å–∞–∂–∏—Ä–∞
        passengers_html = ""
        for i, passenger in enumerate(booking_data['passenger_data']['passengers'], 1):
            passengers_html += f"""
            <div class="passenger-card">
                <h4>üë§ –ü–∞—Å—Å–∞–∂–∏—Ä {i}</h4>
                <table>
                    <tr>
                        <th>–§–ò–û</th>
                        <td>{passenger['firstName']} {passenger['lastName']} {passenger['surname']}</td>
                    </tr>
                    <tr>
                        <th>–¢–∏–ø –ø–∞—Å—Å–∞–∂–∏—Ä–∞</th>
                        <td>{passenger['type']}</td>
                    </tr>
                </table>
            </div>
            """
        
        # –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ —Å—Ç–æ–∏–º–æ—Å—Ç–∏
        #total_price = sum(float(passenger['price'].replace(' ', '')) for passenger in booking_data['passengers'])
        html_template = f"""
    <!DOCTYPE html>
    <html lang="ru">
    <head>
        <meta charset="UTF-8">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <title>–ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è –∞–≤–∏–∞–±–∏–ª–µ—Ç–æ–≤</title>
        <style>
            body {{
                font-family: 'Arial', sans-serif;
                line-height: 1.6;
                color: #333;
                max-width: 700px;
                margin: 0 auto;
                padding: 20px;
                background-color: #f4f4f4;
            }}
            .container {{
                background: white;
                border-radius: 10px;
                padding: 30px;
                box-shadow: 0 2px 10px rgba(0,0,0,0.1);
            }}
            .header {{
                background: linear-gradient(135deg, #007bff, #0056b3);
                color: white;
                padding: 20px;
                border-radius: 10px 10px 0 0;
                text-align: center;
                margin: -30px -30px 20px -30px;
            }}
            .booking-number {{
                background: #ffc107;
                color: #333;
                padding: 10px 20px;
                border-radius: 5px;
                font-weight: bold;
                display: inline-block;
                margin: 10px 0;
            }}
            .flight-info {{
                background: #f8f9fa;
                border-left: 4px solid #007bff;
                padding: 15px;
                margin: 20px 0;
                border-radius: 0 5px 5px 0;
            }}
            .passengers-section {{
                margin: 25px 0;
            }}
            .passenger-card {{
                background: #e8f5e8;
                border: 1px solid #28a745;
                padding: 15px;
                border-radius: 5px;
                margin: 10px 0;
            }}
            .passenger-card h4 {{
                margin-top: 0;
                color: #155724;
            }}
            .price-summary {{
                background: #fff3cd;
                border: 2px solid #ffc107;
                padding: 20px;
                border-radius: 5px;
                margin: 20px 0;
            }}
            .price-breakdown {{
                background: #f8f9fa;
                padding: 15px;
                border-radius: 5px;
                margin: 15px 0;
            }}
            .qr-code {{
                text-align: center;
                margin: 20px 0;
                padding: 15px;
                background: #f8f9fa;
                border-radius: 5px;
            }}
            .footer {{
                text-align: center;
                margin-top: 30px;
                padding-top: 20px;
                border-top: 1px solid #ddd;
                color: #666;
                font-size: 12px;
            }}
            .important {{
                background: #fff3cd;
                border: 1px solid #ffeaa7;
                padding: 15px;
                border-radius: 5px;
                margin: 15px 0;
            }}
            table {{
                width: 100%;
                border-collapse: collapse;
                margin: 10px 0;
            }}
            th, td {{
                padding: 8px 12px;
                text-align: left;
                border-bottom: 1px solid #ddd;
            }}
            th {{
                background: rgba(0,0,0,0.05);
                font-weight: 600;
            }}
            .total-price {{
                font-size: 1.3em;
                font-weight: bold;
                color: #d63384;
                text-align: center;
                padding: 15px;
                background: #f8f9fa;
                border-radius: 5px;
            }}
            .segment-divider {{
                border-left: 3px dashed #007bff;
                height: 40px;
                margin: 10px 0 10px 20px;
            }}
        </style>
    </head>
    <body>
        <div class="container">
            <div class="header">
                <h1>‚úàÔ∏è –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è</h1>
                <div class="booking-number">–ù–æ–º–µ—Ä –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è: {booking_data['order_id']}</div>
                <p>–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–∞—Å—Å–∞–∂–∏—Ä–æ–≤: {len(booking_data['passenger_data']['passengers'])}</p>
            </div>
            
            <!-- –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Ä–µ–π—Å–µ -->
            <div class="flight-info">
                <h3>üìÖ –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Ä–µ–π—Å–µ</h3>
                <table>
                    <tr>
                        <th>–ú–∞—Ä—à—Ä—É—Ç</th>
                        <td>{booking_data['departure_city']} ‚Üí {booking_data['arrival_city']}</td>
                    </tr>
                    <tr>
                        <th>–ê–≤–∏–∞–∫–æ–º–ø–∞–Ω–∏—è</th>
                        <td>{booking_data['airline']}</td>
                    </tr>
                    <tr>
                        <th>–ù–æ–º–µ—Ä —Å–∞–º–æ–ª—ë—Ç–∞</th>
                        <td>{booking_data['flight_number']}</td>
                    </tr>
                    <tr>
                        <th>–¢–µ—Ä–º–∏–Ω–∞–ª</th>
                        <td>{booking_data['terminal']}</td>
                    </tr>
                    <tr>
                        <th>–î–∞—Ç–∞ –≤—ã–ª–µ—Ç–∞</th>
                        <td>{booking_data['departure_date'].strftime('%Y-%m-%d')} –≤ {booking_data['departure_date'].strftime('%H:%m')}</td>
                    </tr>
                    <tr>
                        <th>–î–∞—Ç–∞ –ø—Ä–∏–±—ã—Ç–∏—è</th>
                        <td>{booking_data['arrival_date'].strftime('%Y-%m-%d')} –≤ {booking_data['arrival_date'].strftime('%H:%m')}</td>
                    </tr>
                    {f"<tr><th>–û–±—Ä–∞—Ç–Ω—ã–π —Ä–µ–π—Å</th><td>{booking_data['r_departure_date'].strftime('%Y-%m-%d')} –≤ {booking_data['r_departure_date'].strftime('%H:%m')}</td></tr>" if 'r_departure_date' in booking_data else ""}
                </table>
            </div>
            
            <!-- –°–µ–∫—Ü–∏—è —Å –ø–∞—Å—Å–∞–∂–∏—Ä–∞–º–∏ -->
            <div class="passengers-section">
                <h3>üë• –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–∞—Å—Å–∞–∂–∏—Ä–∞—Ö</h3>
                {passengers_html}
            </div>
            
            <div class="important">
                <h3>‚ö†Ô∏è –í–∞–∂–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è</h3>
                <ul>
                    <li>–í—Å–µ –ø–∞—Å—Å–∞–∂–∏—Ä—ã –¥–æ–ª–∂–Ω—ã –ø—Ä–∏–±—ã—Ç—å –≤ –∞—ç—Ä–æ–ø–æ—Ä—Ç –∑–∞ 2.5 —á–∞—Å–∞ –¥–æ –≤—ã–ª–µ—Ç–∞</li>
                    <li>–ü—Ä–∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –ø—Ä–µ–¥—ä—è–≤–∏—Ç–µ —ç—Ç–æ—Ç –¥–æ–∫—É–º–µ–Ω—Ç –∏ —É–¥–æ—Å—Ç–æ–≤–µ—Ä–µ–Ω–∏—è –ª–∏—á–Ω–æ—Å—Ç–∏ –≤—Å–µ—Ö –ø–∞—Å—Å–∞–∂–∏—Ä–æ–≤</li>
                    <li>–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –≥—Ä—É–ø–ø—ã –∑–∞–∫–∞–Ω—á–∏–≤–∞–µ—Ç—Å—è –∑–∞ 50 –º–∏–Ω—É—Ç –¥–æ –≤—ã–ª–µ—Ç–∞</li>
                    <li>–†–µ–∫–æ–º–µ–Ω–¥—É–µ–º –ø—Ä–æ–π—Ç–∏ –æ–Ω–ª–∞–π–Ω-—Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é –∑–∞ 24 —á–∞—Å–∞ –¥–æ –≤—ã–ª–µ—Ç–∞</li>
                    <li>–ú–µ—Å—Ç–∞ –ø–∞—Å—Å–∞–∂–∏—Ä–æ–≤ –±—É–¥—É—Ç —Ä–∞—Å–ø–æ–ª–æ–∂–µ–Ω—ã —Ä—è–¥–æ–º, –≥–¥–µ —ç—Ç–æ –≤–æ–∑–º–æ–∂–Ω–æ</li>
                </ul>
            </div>
            
            <p>–°–ø–∞—Å–∏–±–æ, —á—Ç–æ –≤—ã–±—Ä–∞–ª–∏ –Ω–∞—à —Å–µ—Ä–≤–∏—Å! –ñ–µ–ª–∞–µ–º –ø—Ä–∏—è—Ç–Ω–æ–≥–æ –ø–æ–ª–µ—Ç–∞! ‚úàÔ∏è</p>
        </div>
    </body>
    </html>
        """
        return html_template
    
    def _create_plain_text_template(self, booking_data: Dict) -> str:
        """–°–æ–∑–¥–∞–Ω–∏–µ —Ç–µ–∫—Å—Ç–æ–≤–æ–π –≤–µ—Ä—Å–∏–∏ –ø–∏—Å—å–º–∞"""
        passengers_text = ""
        for i, passenger in enumerate(booking_data['passenger_data']['passengers'], 1):
            passengers_text += f"""
–ü–∞—Å—Å–∞–∂–∏—Ä {i}:
  –§–ò–û: {passenger['firstName']} {passenger['lastName']} {passenger['surname']}
  –¢–∏–ø: {passenger['type']}
"""

        text_template = f"""
–ü–û–î–¢–í–ï–†–ñ–î–ï–ù–ò–ï –ë–†–û–ù–ò–†–û–í–ê–ù–ò–Ø –ê–í–ò–ê–ë–ò–õ–ï–¢–ê

–ù–æ–º–µ—Ä –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è: {booking_data['id']}

–í–∞—à–µ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–æ!

–ò–ù–§–û–†–ú–ê–¶–ò–Ø –û –†–ï–ô–°–ï:
–ú–∞—Ä—à—Ä—É—Ç: {booking_data['departure_city']} ‚Üí {booking_data['arrival_city']}
–ê–≤–∏–∞–∫–æ–º–ø–∞–Ω–∏—è: {booking_data['airline']} {booking_data['flight_number']}
–î–∞—Ç–∞ –≤—ã–ª–µ—Ç–∞: {booking_data['departure_date'].strftime('%Y-%m-%d')} –≤ {booking_data['departure_date'].strftime('%H:%m')}
–î–∞—Ç–∞ –ø—Ä–∏–±—ã—Ç–∏—è: {booking_data['arrival_date'].strftime('%Y-%m-%d')} –≤ {booking_data['arrival_date'].strftime('%H:%m')}

–ò–ù–§–û–†–ú–ê–¶–ò–Ø –û –ü–ê–°–°–ê–ñ–ò–†–ê–•:
{passengers_text}

–í–ê–ñ–ù–ê–Ø –ò–ù–§–û–†–ú–ê–¶–ò–Ø:
- –ü—Ä–∏–±—ã–≤–∞–π—Ç–µ –≤ –∞—ç—Ä–æ–ø–æ—Ä—Ç –∑–∞ 2 —á–∞—Å–∞ –¥–æ –≤—ã–ª–µ—Ç–∞
- –ò–º–µ–π—Ç–µ –ø—Ä–∏ —Å–µ–±–µ –¥–æ–∫—É–º–µ–Ω—Ç, —É–¥–æ—Å—Ç–æ–≤–µ—Ä—è—é—â–∏–π –ª–∏—á–Ω–æ—Å—Ç—å
- –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –∑–∞–∫–∞–Ω—á–∏–≤–∞–µ—Ç—Å—è –∑–∞ 40 –º–∏–Ω—É—Ç –¥–æ –≤—ã–ª–µ—Ç–∞

–°–ø–∞—Å–∏–±–æ, —á—Ç–æ –≤—ã–±—Ä–∞–ª–∏ –Ω–∞—à —Å–µ—Ä–≤–∏—Å!
        """
        return text_template
    
    def send_booking_confirmation(self, 
                                sender_email: str,
                                sender_password: str,
                                recipient_email: str,
                                booking_data: Dict) -> bool:
        """
        –û—Ç–ø—Ä–∞–≤–∫–∞ –ø–∏—Å—å–º–∞ —Å –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ–º –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è
        
        Args:
            sender_email: Email –æ—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—è
            sender_password: –ü–∞—Ä–æ–ª—å –æ—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—è
            recipient_email: Email –ø–æ–ª—É—á–∞—Ç–µ–ª—è
            booking_data: –î–∞–Ω–Ω—ã–µ –æ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–∏
        
        Returns:
            bool: –£—Å–ø–µ—à–Ω–æ—Å—Ç—å –æ—Ç–ø—Ä–∞–≤–∫–∏
        """
        
        try:
            # –ü–æ–ª—É—á–∞–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ SMTP
            print(1)
            smtp_config = self._get_smtp_config(sender_email)
            print(2)
            # –°–æ–∑–¥–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
            msg = MIMEMultipart('alternative')
            msg['From'] = sender_email
            msg['To'] = recipient_email
            msg['Subject'] = f'–ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è #{booking_data["id"]}'
            msg['Date'] = formatdate(localtime=True)
            
            # –î–æ–±–∞–≤–ª—è–µ–º —Ç–µ–∫—Å—Ç–æ–≤—É—é –∏ HTML –≤–µ—Ä—Å–∏–∏
            print(3)
            text_part = MIMEText(self._create_plain_text_template(booking_data), 'plain', 'utf-8')
            print('11')
            html_part = MIMEText(self._create_booking_html_template(booking_data), 'html', 'utf-8')
            print(4)
            msg.attach(text_part)
            msg.attach(html_part)
            print(smtp_config)
            # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º
            server = smtplib.SMTP(smtp_config['server'], smtp_config['port'])
            print(6)
            server.starttls()
            print(7)
            server.login(sender_email, sender_password)
            print(8)
            server.send_message(msg)
            server.quit()
            
            print(f"–ü–∏—Å—å–º–æ —Å –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ–º –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è #{booking_data['id']} –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –Ω–∞ {recipient_email}")
            return True
            
        except Exception as e:
            print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –ø–∏—Å—å–º–∞: {e}")
            return False

# –°–æ–∑–¥–∞–µ–º —ç–∫–∑–µ–º–ø–ª—è—Ä –∫–ª–∞—Å—Å–∞ –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è